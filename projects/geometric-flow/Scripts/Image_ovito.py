# Boilerplate code generated by OVITO Pro 3.9.2
import sys 
from ovito.io import *
from ovito.modifiers import *
from ovito.data import *
from ovito.pipeline import *
from ovito.vis import *
from ovito.qt_compat import QtCore


nu=float(sys.argv[1])
Init_cond=int(sys.argv[2])
Nsim=int(sys.argv[3])
dir='nu_{:.3f}_c0_0.000_KA_10.000_KB_0.005000_init_cond_{}_Nsim_{}'.format(nu,Init_cond,Nsim)

pipeline = import_file('/nfs/scistore16/wojtgrp/mrojasve/MiraculousMembranes/projects/geometric-flow/Results/Mem3DG_Cell_Shape/'+dir+'/Membrane_*.obj')

# Data import:

# Manual modifications of the imported data objects:
# def modify_pipeline_input(frame: int, data: DataCollection):
#     data.triangle_meshes['mesh_'].face_count = 24136
#     data.triangle_meshes['mesh_'].vertex_count = 12070
# pipeline.modifiers.append(modify_pipeline_input)

# Visual element initialization:
data = pipeline.compute() # Evaluate new pipeline to gain access to visual elements associated with the imported data objects.
data.triangle_meshes['mesh'].vis.color = (1.0, 0.4313725531101227, 0.9725490212440491)
del data # Done accessing input DataCollection of pipeline.
pipeline.add_to_scene()

# Viewport setup:
viewport_layout = []

# Viewport "Ortho":
vp = Viewport(
    type = Viewport.Type.Ortho, 
    fov = 1.43358685907, 
    camera_dir = (-0.5500468046882635, -0.5833660729800031, 0.5976056706124206), 
    camera_pos = (0.040856, -0.19797200000000004, -0.15359299999999998))
viewport_layout.append((vp, [0.0, 0.0, 0.5, 0.5]))  # [left,top,width,height]

# Viewport "Left":
vp = Viewport(
    type = Viewport.Type.Left, 
    fov = 0.667887, 
    camera_dir = (1.0, -0.0, -0.0), 
    camera_pos = (0.040856, -0.19797200000000004, -0.15359299999999998))
viewport_layout.append((vp, [0.0, 0.5, 0.5, 0.5]))  # [left,top,width,height]

# Viewport "Front":
vp = Viewport(
    type = Viewport.Type.Front, 
    fov = 0.753040489711, 
    camera_dir = (-0.0, 1.0, -0.0), 
    camera_pos = (0.040856, -0.19797200000000004, -0.15359299999999998))
viewport_layout.append((vp, [0.5, 0.0, 0.5, 0.5]))  # [left,top,width,height]

# Viewport "Perspective":
vp = Viewport(
    type = Viewport.Type.Perspective, 
    fov = 0.610865238198, 
    camera_dir = (-0.49923017660270624, 0.665640235470275, -0.5547001962252291), 
    camera_pos = (2.213943071987125, -3.0954214293161666, 2.260948191096806))
viewport_layout.append((vp, [0.5, 0.5, 0.5, 0.5]))  # [left,top,width,height]

# Renderer setup:
renderer = TachyonRenderer(
    direct_light_intensity = 0.94, 
    shadows = False, 
    ambient_occlusion = False)

# Rendering:
vp.render_image(filename='/nfs/scistore16/wojtgrp/mrojasve/MiraculousMembranes/projects/geometric-flow/Results/Mem3DG_Cell_Shape/'+dir+'.jpg', size=(600, 600), renderer=renderer, layout=viewport_layout, alpha=True)